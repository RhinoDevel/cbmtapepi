0) On power-on or soft-reset:

Sense, tape read, motor line and tape write GPIO pins at Pi are all by default
inputs (as all GPIO pins are) with pull-down resistors (selected this way for
CBM Tape Pi).

1) kernel_main(): CBM Tape Pi initializes:

Setting sense output line to HIGH at CBM (circuit inverts signal).
Setting tape read output line to HIGH at CBM (circuit inverts signal).
Setting motor line to input with pull-down (circuit does NOT invert signal).
Setting tape write line to input with pull-down (circuit does invert signal).

2) Reading configuration file and either entering SAVE or fast mode:

2)a) Either SAVE mode:

2)a)1) Setting sense line to LOW at CBM (simulating user pressing button).

2)a)2)Waiting for data from CBM.

2)a)3)Interpreting data, acting on it and maybe sending data back.

-> Going back to first step 2)a)1).

2)b) Or fast mode:

2)b)1) Entering load loop:

Actually entering loop, where Pi sends the fast mode PRG over and over to the
CBM (simulating an endless tape).

This loop will break, if Pi detected the signal that the CBM sends for some
short time to indicate that the fast mode wedge got installed and is ready to
use after a successful load.

If Pi did not detect the fast-mode-wedge-installed signal, yet, wait to give CBM
enough time for the ISR (of the CBM) to disable the motor signal.

-> At some point CBM loaded fast mode PRG and user entered SYS or RUN command to
   execute the fast mode PRG installer.

   -> Fast mode installer sends the signal (see above) for some time.

      -> Pi exits the load loop.

2)b)2) Entering command loop (with fast mode enabled).

petload_retrieve():

- Waiting for MOTOR (data-ready-from-CBM) line to really be LOW again.

- Set READ (data-ack-to-CBM) line to HIGH at CBM.

2)b)2)1) Retrieve the "name" (the command to execute) from CBM:

For each character: retrieve_byte():

For each bit: retrieve_bit():

For each bit that is correctly set by the CBM, the CBM will toggle the level of
the MOTOR (data-ready-from-CBM) line.

...

2)b)2)2) Retrieve the address from CBM:

...

2)b)2)3) If address is not zero: Retrieve the payload:

...

--- WORK IN PROGRESS ---
